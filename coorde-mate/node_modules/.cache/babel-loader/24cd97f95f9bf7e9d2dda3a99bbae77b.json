{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/ProposalCard.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash'; //import { connect  } from 'react-redux';\n//import { readProposals } from '../actions';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader'; //import Loading from '../public/Loading';\n\nclass ProposalCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proposalDatas: [],\n      clothDatas: []\n    };\n  }\n\n  componentWillMount() {\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    });\n    request.get(\"/proposals/\".concat(this.props.requestId)).then(res => {\n      this.setState({\n        proposalDatas: res.data\n      });\n      console.log(res.data);\n    });\n  }\n  /*\n  componentDidMount() {\n  this.props.readProposals(this.requestIdState)\n  }*/\n\n  /*\n  renderProposals(requestId) {\n  this.props.readProposals(requestId)\n   return (\n  _.map(this.props.events, proposalData => (\n  <div>\n  <p>提案メモ</p>\n  <p>{proposalData.p_memo}</p>\n  <p>提案服一覧</p>\n  <div>{this.renderSelectSloths(proposalData.p_pc_text)}</div>\n  <p>{proposalData.p_pc_text}</p>\n   ---------------------------------\n  </div>\n  ))\n  )\n  }*/\n\n\n  renderSelectSloths(selectCloths) {\n    const ary = selectCloths.split('_');\n    ary.map(function (v) {\n      return parseInt(v);\n    });\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    });\n    ary.map(cloths => {\n      request.get(\"/closets/\".concat(cloths)).then(res => {\n        this.setState({\n          clothDatas: res.data\n        });\n        console.log(res.data);\n      });\n      /*\n      return (\n        <GridListTile key={cloths} style={{width: '20%'}}>\n          <img src=\"http://18.178.35.28:3001/closets/${cloths}\" alt=\"proposal image\"/>\n          {console.log(cloths)}\n        </GridListTile>\n      )\n      */\n    });\n  }\n  /*\n  componentWillMount() {\n  const requestIdState = localStorage.getItem('requestId')\n  }\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.proposalDatas.map(cloth => {\n      if (cloth.id) {\n        return React.createElement(GridList, {\n          cellHeight: 200,\n          className: \"gridList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(GridListTile, {\n          key: \"Subheader\",\n          cols: 2,\n          style: {\n            height: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(ListSubheader, {\n          component: \"div\",\n          className: \"listSubheader\",\n          style: {\n            fontSize: '2rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"\\u6240\\u6709\\u670D\\u4E00\\u89A7\")), React.createElement(GridListTile, {\n          key: cloth.id,\n          style: {\n            width: '20%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.renderSelectSloths(cloth.p_pc_text)));\n      }\n    }));\n  }\n\n}\n/*\nconst mapStateToProps = state => ({ events: state.events })\nconst mapDispatchToProps = ({ readProposals })\n export default connect(mapStateToProps, mapDispatchToProps)(ProposalCard);\n*/\n\n\nexport default ProposalCard;","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/ProposalCard.js"],"names":["React","axios","_","GridList","GridListTile","ListSubheader","ProposalCard","Component","constructor","props","state","proposalDatas","clothDatas","componentWillMount","request","create","baseURL","get","requestId","then","res","setState","data","console","log","renderSelectSloths","selectCloths","ary","split","map","v","parseInt","cloths","render","cloth","id","height","fontSize","width","p_pc_text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\n//import { connect  } from 'react-redux';\n//import { readProposals } from '../actions';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n//import Loading from '../public/Loading';\n\nclass ProposalCard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      proposalDatas:[],\n      clothDatas: []\n    }\n  }\n\n\n  componentWillMount(){\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n\n    request.get(`/proposals/${this.props.requestId}`)\n    .then(res => {\n      this.setState({ proposalDatas: res.data })\n      console.log(res.data)\n    })\n\n  }\n\n\n\n  /*\n  componentDidMount() {\n  this.props.readProposals(this.requestIdState)\n  }*/\n  /*\n  renderProposals(requestId) {\n  this.props.readProposals(requestId)\n\n  return (\n  _.map(this.props.events, proposalData => (\n  <div>\n  <p>提案メモ</p>\n  <p>{proposalData.p_memo}</p>\n  <p>提案服一覧</p>\n  <div>{this.renderSelectSloths(proposalData.p_pc_text)}</div>\n  <p>{proposalData.p_pc_text}</p>\n\n  ---------------------------------\n  </div>\n  ))\n  )\n  }*/\n\n  renderSelectSloths(selectCloths) {\n    const ary = selectCloths.split('_')\n    ary.map(function(v) {\n      return parseInt(v)\n    })\n\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n\n    ary.map((cloths) => {\n      request.get(`/closets/${cloths}`)\n      .then(res => {\n        this.setState({ clothDatas: res.data })\n        console.log(res.data)\n      })\n\n\n      /*\n      return (\n        <GridListTile key={cloths} style={{width: '20%'}}>\n          <img src=\"http://18.178.35.28:3001/closets/${cloths}\" alt=\"proposal image\"/>\n          {console.log(cloths)}\n        </GridListTile>\n      )\n      */\n    })\n\n  }\n  /*\n  componentWillMount() {\n  const requestIdState = localStorage.getItem('requestId')\n  }\n  */\n  render() {\n    return (\n      <div className=\"root\">\n        {this.state.proposalDatas.map((cloth) => {\n          if(cloth.id) {\n            return (\n              <GridList cellHeight={200} className=\"gridList\">\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                  <ListSubheader component=\"div\" className=\"listSubheader\" style={{fontSize: '2rem'}}>所有服一覧</ListSubheader>\n                </GridListTile>\n\n                <GridListTile key={cloth.id} style={{width: '20%'}}>\n                  {this.renderSelectSloths(cloth.p_pc_text)}\n                </GridListTile>\n\n              </GridList>\n            )\n          }\n        })}\n        {/*\n        <GridList cellHeight={200} className=\"gridList\">\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n            <ListSubheader component=\"div\" className=\"listSubheader\" style={{fontSize: '2rem'}}>所有服一覧</ListSubheader>\n          </GridListTile>*/}\n\n          {/* 所有服一覧表示 */}\n          {/*\n            {this.state.proposalDatas.map((cloth) => {\n            return (\n            <GridListTile key={cloth.id} style={{width: '20%'}}>\n            <img src={cloth.c_link} alt={`服画像id : ${cloth.c_u_id}`} />\n\n            </GridListTile>\n            )\n            })}\n            </GridList>\n            */}\n            {/*\n            <GridListTile key={this.state.proposalDatas.id} style={{width: '20%'}}>\n              {this.renderSelectSloths(this.state.proposalDatas.p_pc_text)}\n            </GridListTile>\n\n          </GridList>*/}\n        </div>\n      );\n    }\n  }\n\n  /*\n  const mapStateToProps = state => ({ events: state.events })\n  const mapDispatchToProps = ({ readProposals })\n\n  export default connect(mapStateToProps, mapDispatchToProps)(ProposalCard);\n  */\n  export default ProposalCard;\n"]},"metadata":{},"sourceType":"module"}