{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/ProposalCard.js\";\nimport React from 'react';\nimport axios from 'axios'; //import { connect  } from 'react-redux';\n//import { readProposals } from '../actions';\n\nimport { connect } from 'react-redux';\nimport { readPastRequest } from '../actions';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Loading from '../public/Loading';\n\nclass ProposalCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proposalDatas: [],\n      proposalUserDatas: []\n    };\n  }\n\n  componentWillMount() {\n    this.props.readPastRequest(this.props.requestId);\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    });\n    request.get(\"/proposals/\".concat(this.props.requestId)).then(res => {\n      this.setState({\n        proposalDatas: res.data\n      });\n    });\n    console.log(this.state);\n  }\n\n  renderAccount() {\n    if (this.props.events.is_selected_bc) {}\n  }\n\n  bcLabel(p_bc) {\n    if (p_bc !== null) return React.createElement(\"div\", {\n      className: \"bcLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"BC\");\n  }\n\n  render() {\n    const props = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.renderAccount(), this.state.proposalDatas.map(cloth => {\n      if (cloth.id) {\n        return React.createElement(\"div\", {\n          className: \"root shadowStyle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(GridList, {\n          cellHeight: 200,\n          className: \"gridList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(GridListTile, {\n          key: \"Subheader\",\n          cols: 2,\n          style: {\n            height: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(ListSubheader, {\n          component: \"div\",\n          className: \"listSubheader\",\n          style: {\n            fontSize: '2rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"\\u63D0\\u6848\\u670D\\u4E00\\u89A7\")), cloth.p_selected_data.map(cloth => {\n          return React.createElement(GridListTile, {\n            key: cloth.id,\n            style: {\n              width: 'auto',\n              height: 150,\n              background: '#E1E8ED',\n              padding: 5,\n              borderRadius: 3,\n              marginLeft: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: cloth.link,\n            alt: \"\\u670D\\u753B\\u50CFid : \".concat(cloth.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }));\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"memo: \", cloth.p_memo), this.bcLabel(cloth.p_bc)));\n      } else return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  events: state.events\n});\n\nconst mapDispatchToProps = {\n  readPastRequest\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalCard); //export default ProposalCard;","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/ProposalCard.js"],"names":["React","axios","connect","readPastRequest","GridList","GridListTile","ListSubheader","Loading","ProposalCard","Component","constructor","props","state","proposalDatas","proposalUserDatas","componentWillMount","requestId","request","create","baseURL","get","then","res","setState","data","console","log","renderAccount","events","is_selected_bc","bcLabel","p_bc","render","map","cloth","id","height","fontSize","p_selected_data","width","background","padding","borderRadius","marginLeft","link","p_memo","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,SAASC,OAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,QAAgC,YAAhC;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AAIA,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAC,EADH;AAEXC,MAAAA,iBAAiB,EAAC;AAFP,KAAb;AAID;;AAGDC,EAAAA,kBAAkB,GAAE;AAClB,SAAKJ,KAAL,CAAWR,eAAX,CAA2B,KAAKQ,KAAL,CAAWK,SAAtC;AAEA,UAAMC,OAAO,GAAGhB,KAAK,CAACiB,MAAN,CAAa;AAC3BC,MAAAA,OAAO,EAAE;AADkB,KAAb,CAAhB;AAIAF,IAAAA,OAAO,CAACG,GAAR,sBAA0B,KAAKT,KAAL,CAAWK,SAArC,GACCK,IADD,CACMC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc;AAAEV,QAAAA,aAAa,EAAES,GAAG,CAACE;AAArB,OAAd;AACD,KAHD;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACD;;AAEDe,EAAAA,aAAa,GAAG;AACd,QAAG,KAAKhB,KAAL,CAAWiB,MAAX,CAAkBC,cAArB,EAAqC,CAEpC;AACF;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,QAAGA,IAAI,KAAK,IAAZ,EAAkB,OAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACnB;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAMrB,KAAK,GAAG,KAAKA,KAAnB;AAEA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKgB,aAAL,EADH,EAEG,KAAKf,KAAL,CAAWC,aAAX,CAAyBoB,GAAzB,CAA8BC,KAAD,IAAW;AACvC,UAAGA,KAAK,CAACC,EAAT,EAAa;AACX,eACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,UAAU,EAAE,GAAtB;AAA2B,UAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAC,WAAlB;AAA8B,UAAA,IAAI,EAAE,CAApC;AAAuC,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,aAAD;AAAe,UAAA,SAAS,EAAC,KAAzB;AAA+B,UAAA,SAAS,EAAC,eAAzC;AAAyD,UAAA,KAAK,EAAE;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CADF,EAMGH,KAAK,CAACI,eAAN,CAAsBL,GAAtB,CAA2BC,KAAD,IAAW;AACpC,iBACE,oBAAC,YAAD;AAAc,YAAA,GAAG,EAAEA,KAAK,CAACC,EAAzB;AAA6B,YAAA,KAAK,EAAE;AAACI,cAAAA,KAAK,EAAE,MAAR;AAAgBH,cAAAA,MAAM,EAAE,GAAxB;AAA6BI,cAAAA,UAAU,EAAE,SAAzC;AAAoDC,cAAAA,OAAO,EAAE,CAA7D;AAAgEC,cAAAA,YAAY,EAAE,CAA9E;AAAiFC,cAAAA,UAAU,EAAE;AAA7F,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,GAAG,EAAET,KAAK,CAACU,IAAhB;AAAsB,YAAA,GAAG,mCAAaV,KAAK,CAACC,EAAnB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAKD,SANA,CANH,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUD,KAAK,CAACW,MAAhB,CAfF,EAiBG,KAAKf,OAAL,CAAaI,KAAK,CAACH,IAAnB,CAjBH,CADF,CADF;AAwBD,OAzBD,MAyBO,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACN,KA3BF,CAFH,CADF;AAkCC;;AAzEsC;;AA4EzC,MAAMe,eAAe,GAAGlC,KAAK,KAAK;AAAEgB,EAAAA,MAAM,EAAEhB,KAAK,CAACgB;AAAhB,CAAL,CAA7B;;AAEA,MAAMmB,kBAAkB,GAAI;AAAE5C,EAAAA;AAAF,CAA5B;AAEA,eAAeD,OAAO,CAAC4C,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvC,YAA7C,CAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n//import { connect  } from 'react-redux';\n//import { readProposals } from '../actions';\nimport { connect  } from 'react-redux';\nimport { readPastRequest } from '../actions';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Loading from '../public/Loading';\n\n\n\nclass ProposalCard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      proposalDatas:[],\n      proposalUserDatas:[],\n    }\n  }\n\n\n  componentWillMount(){\n    this.props.readPastRequest(this.props.requestId)\n\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n\n    request.get(`/proposals/${this.props.requestId}`)\n    .then(res => {\n      this.setState({ proposalDatas: res.data })\n    })\n\n    console.log(this.state)\n  }\n\n  renderAccount() {\n    if(this.props.events.is_selected_bc) {\n\n    }\n  }\n\n  bcLabel(p_bc) {\n    if(p_bc !== null) return <div className=\"bcLabel\">BC</div>\n  }\n\n\n  render() {\n    const props = this.props\n\n    return (\n      <React.Fragment>\n        {this.renderAccount()}\n        {this.state.proposalDatas.map((cloth) => {\n          if(cloth.id) {\n            return (\n              <div className=\"root shadowStyle\">\n                <GridList cellHeight={200} className=\"gridList\">\n                  <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                    <ListSubheader component=\"div\" className=\"listSubheader\" style={{fontSize: '2rem'}}>提案服一覧</ListSubheader>\n                  </GridListTile>\n\n                  {/* 提案服一覧表示 */}\n                  {cloth.p_selected_data.map((cloth) => {\n                    return (\n                      <GridListTile key={cloth.id} style={{width: 'auto', height: 150, background: '#E1E8ED', padding: 5, borderRadius: 3, marginLeft: 10}}>\n                        <img src={cloth.link} alt={`服画像id : ${cloth.id}`} />\n                      </GridListTile>\n                    )\n                  })}\n\n\n                  <p>memo: {cloth.p_memo}</p>\n\n                  {this.bcLabel(cloth.p_bc)}\n\n                </GridList>\n              </div>\n            )\n          } else return <Loading />\n          })}\n\n        </React.Fragment>\n      );\n    }\n  }\n\n  const mapStateToProps = state => ({ events: state.events })\n\n  const mapDispatchToProps = ({ readPastRequest })\n\n  export default connect(mapStateToProps, mapDispatchToProps)(ProposalCard);\n\n  //export default ProposalCard;\n"]},"metadata":{},"sourceType":"module"}