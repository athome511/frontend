{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\idyno\\\\github\\\\frontend\\\\coorde-mate\\\\src\\\\components\\\\ClothsTile.js\";\nimport React from 'react'; //import axios from 'axios';\n\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { readCloths } from '../actions';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Loading from '../public/Loading'; //css\n\nimport '../css/clothsTile.css'; // ユーザの所有服一覧\n\nclass ClothsTile extends React.Component {\n  /*constructor(props){\r\n  super(props);\r\n  this.renderCloths = this.renderCloths.bind(this)\r\n  }\r\n    componentDidMount() {\r\n  this.props.readCloths(this.props.userId)\r\n  //this.props.readCloths(1)\r\n  }*\r\n    renderCloths() {\r\n  return (\r\n  _.map(this.props.events, clothData => (\r\n  <GridListTile key={clothData.c_link} style={{width: '20%'}}>\r\n  <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\r\n  </GridListTile>\r\n  ))\r\n  )\r\n  }*/\n  renderCloths() {\n    /*const clothsState = JSON.parse(localStorage.getItem('clothsData'))\r\n      //_.mapKeys(clothsState)\r\n    clothsState.map((clothData) => {\r\n      return (\r\n        <GridListTile key={clothData.c_link} style={{width: '20%'}}>\r\n          <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\r\n        </GridListTile>\r\n      )\r\n    })*/\n  }\n\n  render() {\n    if (!Number.isInteger(this.props.events)) return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }); //if (this.props.events == null) return <Loading />\n    //if (this.props.userId === undefined) return <Loading />\n\n    return React.createElement(\"div\", {\n      className: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      key: this.props.events.c_u_id,\n      cellHeight: 200,\n      className: \"gridList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: \"Subheader\",\n      cols: 2,\n      style: {\n        height: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ListSubheader, {\n      component: \"div\",\n      className: \"listSubheader\",\n      style: {\n        fontSize: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\u6240\\u6709\\u670D\\u4E00\\u89A7\")), this.renderCloths()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  events: state.events\n});\n\nconst mapDispatchToProps = {\n  readCloths\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ClothsTile); //export default ClothsTile;","map":{"version":3,"sources":["C:\\Users\\idyno\\github\\frontend\\coorde-mate\\src\\components\\ClothsTile.js"],"names":["React","_","connect","readCloths","GridList","GridListTile","ListSubheader","Loading","ClothsTile","Component","renderCloths","render","Number","isInteger","props","events","c_u_id","height","fontSize","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAGA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,OAAO,uBAAP,C,CAGA;;AACA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AACvC;;;;;;;;;;;;;;;;;AAoBAC,EAAAA,YAAY,GAAG;AACb;;;;;;;;;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAG,CAACC,MAAM,CAACC,SAAP,CAAiB,KAAKC,KAAL,CAAWC,MAA5B,CAAJ,EAA0C,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CADnC,CAEP;AACA;;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,MAAjC;AAAyC,MAAA,UAAU,EAAE,GAArD;AAA0D,MAAA,SAAS,EAAC,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAC,WAAlB;AAA8B,MAAA,IAAI,EAAE,CAApC;AAAuC,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,KAAzB;AAA+B,MAAA,SAAS,EAAC,eAAzC;AAAyD,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CAFF,EAOG,KAAKR,YAAL,EAPH,CADF,CADF;AAyBC;;AAhEoC;;AAoEvC,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAAEL,EAAAA,MAAM,EAAEK,KAAK,CAACL;AAAhB,CAAL,CAA7B;;AACA,MAAMM,kBAAkB,GAAI;AAAElB,EAAAA;AAAF,CAA5B;AAEA,eAAeD,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CACbb,UADa,CAAf,C,CAKA","sourcesContent":["import React from 'react';\r\n//import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { readCloths } from '../actions';\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n\r\nimport Loading from '../public/Loading';\r\n//css\r\nimport '../css/clothsTile.css';\r\n\r\n\r\n// ユーザの所有服一覧\r\nclass ClothsTile extends React.Component {\r\n  /*constructor(props){\r\n  super(props);\r\n  this.renderCloths = this.renderCloths.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n  this.props.readCloths(this.props.userId)\r\n  //this.props.readCloths(1)\r\n  }*\r\n\r\n  renderCloths() {\r\n  return (\r\n  _.map(this.props.events, clothData => (\r\n  <GridListTile key={clothData.c_link} style={{width: '20%'}}>\r\n  <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\r\n  </GridListTile>\r\n  ))\r\n  )\r\n  }*/\r\n\r\n  renderCloths() {\r\n    /*const clothsState = JSON.parse(localStorage.getItem('clothsData'))\r\n\r\n    //_.mapKeys(clothsState)\r\n    clothsState.map((clothData) => {\r\n      return (\r\n        <GridListTile key={clothData.c_link} style={{width: '20%'}}>\r\n          <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\r\n        </GridListTile>\r\n      )\r\n    })*/\r\n  }\r\n\r\n  render() {\r\n    if(!Number.isInteger(this.props.events))  return <Loading />\r\n    //if (this.props.events == null) return <Loading />\r\n    //if (this.props.userId === undefined) return <Loading />\r\n\r\n    return (\r\n      <div className=\"root\">\r\n        <GridList key={this.props.events.c_u_id} cellHeight={200} className=\"gridList\">\r\n\r\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n            <ListSubheader component=\"div\" className=\"listSubheader\" style={{fontSize: '2rem'}}>所有服一覧</ListSubheader>\r\n          </GridListTile>\r\n\r\n          {/* 所有服一覧表示 */}\r\n          {this.renderCloths()}\r\n          {/*\r\n            {this.state.userDatas.map((tile) => {\r\n            return (\r\n            <GridListTile key={tile.c_link} style={{width: '20%'}}>\r\n            <img src={tile.c_link} alt={`服画像id : ${tile.c_u_id}`} />\r\n            </GridListTile>\r\n            )\r\n            })}\r\n            */}\r\n\r\n            {/*this.setUser(this.props.userId)*/}\r\n\r\n          </GridList>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const mapStateToProps = state => ({ events: state.events })\r\n  const mapDispatchToProps = ({ readCloths });\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(\r\n    ClothsTile\r\n  );\r\n\r\n\r\n  //export default ClothsTile;\r\n"]},"metadata":{},"sourceType":"module"}