{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/SubmitRequest.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom'; //import ButtonComponent from '../public/ButtonComponent';\n\nimport { postEvent } from '../actions'; //css\n\nimport '../css/submitRequest.css'; //依頼投稿ページ\n\nclass SubmitRequest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  renderField(field) {\n    const input = field.input,\n          label = field.label,\n          type = field.type,\n          _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, error));\n  }\n\n  async onSubmit(values) {\n    await this.props.postEvent(values);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const handleSubmit = this.props.handleSubmit;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"LabelTitle\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"BodyTitle\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) errors.title = \"Entar a title, Please.\";\n  if (!values.body) errors.body = \"Entar a title, Please.\";\n  return errors;\n};\n\nconst mapDispatchToProps = {\n  postEvent\n};\nexport default connect(null, mapDispatchToProps)(reduxForm({\n  validate,\n  form: 'requestNewForm'\n})(SubmitRequest));","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/SubmitRequest.js"],"names":["React","connect","Field","reduxForm","Link","postEvent","SubmitRequest","Component","constructor","props","onSubmit","bind","renderField","field","input","label","type","meta","touched","error","values","history","push","render","handleSubmit","validate","errors","title","body","mapDispatchToProps","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAGA;;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CAEA;;AACA,OAAO,0BAAP,C,CAEA;;AACA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA,UACTC,KADS,GACwCD,KADxC,CACTC,KADS;AAAA,UACFC,KADE,GACwCF,KADxC,CACFE,KADE;AAAA,UACKC,IADL,GACwCH,KADxC,CACKG,IADL;AAAA,wBACwCH,KADxC,CACWI,IADX;AAAA,UACmBC,OADnB,eACmBA,OADnB;AAAA,UAC4BC,KAD5B,eAC4BA,KAD5B;AAGjB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,+CAAWL,KAAX;AAAkB,MAAA,WAAW,EAAEC,KAA/B;AAAsC,MAAA,IAAI,EAAEC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAEGE,OAAO,IAAIC,KAAX,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,KAAP,CAFvB,CADF;AAMD;;AAED,QAAMT,QAAN,CAAeU,MAAf,EAAuB;AACrB,UAAM,KAAKX,KAAL,CAAWJ,SAAX,CAAqBe,MAArB,CAAN;AACA,SAAKX,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,YADD,GACkB,KAAKf,KADvB,CACCe,YADD;AAGP,WACE;AAAM,MAAA,QAAQ,EAAEA,YAAY,CAAC,KAAKd,QAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,YAAb;AAA0B,MAAA,IAAI,EAAC,OAA/B;AAAuC,MAAA,IAAI,EAAC,MAA5C;AAAmD,MAAA,SAAS,EAAE,KAAKE,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,WAAb;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,SAAS,EAAE,KAAKA,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,QAAQ,EAAE,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CALF,CADF;AAaD;;AAtCyC;;AAyC5C,MAAMa,QAAQ,GAAGL,MAAM,IAAI;AACzB,QAAMM,MAAM,GAAG,EAAf;AAEA,MAAI,CAACN,MAAM,CAACO,KAAZ,EAAmBD,MAAM,CAACC,KAAP,GAAe,wBAAf;AACnB,MAAI,CAACP,MAAM,CAACQ,IAAZ,EAAkBF,MAAM,CAACE,IAAP,GAAc,wBAAd;AAElB,SAAOF,MAAP;AACD,CAPD;;AASA,MAAMG,kBAAkB,GAAI;AAAExB,EAAAA;AAAF,CAA5B;AAEA,eAAeJ,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CACb1B,SAAS,CAAC;AAAEsB,EAAAA,QAAF;AAAYK,EAAAA,IAAI,EAAE;AAAlB,CAAD,CAAT,CAAgDxB,aAAhD,CADa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\n\n\n//import ButtonComponent from '../public/ButtonComponent';\nimport { postEvent } from '../actions';\n\n//css\nimport '../css/submitRequest.css';\n\n//依頼投稿ページ\nclass SubmitRequest extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  renderField(field) {\n    const { input, label, type, meta: { touched, error } } = field\n\n    return(\n      <div>\n        <input {...input} placeholder={label} type={type} />\n        {touched && error && <span>{error}</span>}\n      </div>\n    )\n  }\n\n  async onSubmit(values) {\n    await this.props.postEvent(values)\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { handleSubmit } = this.props\n\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <div><Field label=\"LabelTitle\" name=\"title\" type=\"text\" component={this.renderField} /></div>\n\n        <div><Field label=\"BodyTitle\" name=\"body\" type=\"text\" component={this.renderField} /></div>\n\n        <div>\n          <input type=\"submit\" value=\"Submit\" disabled={false} />\n          <Link to=\"/\" >Cancel</Link>\n        </div>\n      </form>\n\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.title) errors.title = \"Entar a title, Please.\"\n  if (!values.body) errors.body = \"Entar a title, Please.\"\n\n  return errors\n}\n\nconst mapDispatchToProps = ({ postEvent })\n\nexport default connect(null, mapDispatchToProps)(\n  reduxForm({ validate, form: 'requestNewForm' })(SubmitRequest)\n)\n"]},"metadata":{},"sourceType":"module"}