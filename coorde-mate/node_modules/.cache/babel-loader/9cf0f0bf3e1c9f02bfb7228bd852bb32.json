{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/ClothsTile.js\";\nimport React from 'react';\nimport axios from 'axios'; //import _ from 'lodash';\n\nimport { connect } from 'react-redux';\nimport { readCloths } from '../actions';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Loading from '../public/Loading'; //css\n\nimport '../css/clothsTile.css'; // ユーザの所有服一覧\n\nclass ClothsTile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      datas: []\n    };\n  }\n\n  componentWillMount() {\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    });\n    request.get(\"/request/\".concat(this.props.match.params.requestId, \"/\")).then(res => {\n      this.setState({\n        datas: res.data.c_link_data\n      });\n    });\n  }\n  /*constructor(props){\n  super(props);\n  this.renderCloths = this.renderCloths.bind(this)\n  }\n   componentDidMount() {\n  this.props.readCloths(this.props.userId)\n  //this.props.readCloths(1)\n  }*\n   renderCloths() {\n  return (\n  _.map(this.props.events, clothData => (\n  <GridListTile key={clothData.c_link} style={{width: '20%'}}>\n  <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\n  </GridListTile>\n  ))\n  )\n  }*/\n\n\n  renderCloths() {\n    /*const clothsState = JSON.parse(localStorage.getItem('clothsData'))\n     //_.mapKeys(clothsState)\n    clothsState.map((clothData) => {\n      return (\n        <GridListTile key={clothData.c_link} style={{width: '20%'}}>\n          <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\n        </GridListTile>\n      )\n    })*/\n  }\n\n  render() {\n    //if(!Number.isInteger(this.props.events))  return <Loading />\n    if (!Number.isInteger(1000)) return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }); //if (this.props.events == null) return <Loading />\n    //if (this.props.userId === undefined) return <Loading />\n\n    return React.createElement(\"div\", {\n      className: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      key: this.props.events.c_u_id,\n      cellHeight: 200,\n      className: \"gridList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: \"Subheader\",\n      cols: 2,\n      style: {\n        height: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(ListSubheader, {\n      component: \"div\",\n      className: \"listSubheader\",\n      style: {\n        fontSize: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\u6240\\u6709\\u670D\\u4E00\\u89A7\")), this.renderCloths(), this.state.datas.map(clothData => {\n      return React.createElement(\"div\", {\n        className: \"readContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: clothData.c_link,\n        key: clothData.id,\n        alt: \"haha\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  events: state.events\n});\n\nconst mapDispatchToProps = {\n  readCloths\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ClothsTile); //export default ClothsTile;","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/ClothsTile.js"],"names":["React","axios","connect","readCloths","GridList","GridListTile","ListSubheader","Loading","ClothsTile","Component","constructor","state","datas","componentWillMount","request","create","baseURL","get","props","match","params","requestId","then","res","setState","data","c_link_data","renderCloths","render","Number","isInteger","events","c_u_id","height","fontSize","map","clothData","c_link","id","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n//import _ from 'lodash';\nimport { connect } from 'react-redux';\n\nimport { readCloths } from '../actions';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n\nimport Loading from '../public/Loading';\n//css\nimport '../css/clothsTile.css';\n\n\n// ユーザの所有服一覧\nclass ClothsTile extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      datas:[]\n    };\n  }\n\n  componentWillMount() {\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n\n    request.get(`/request/${this.props.match.params.requestId}/`)\n    .then(res => {\n      this.setState({\n        datas: res.data.c_link_data\n      });\n    })\n  }\n\n  /*constructor(props){\n  super(props);\n  this.renderCloths = this.renderCloths.bind(this)\n  }\n\n  componentDidMount() {\n  this.props.readCloths(this.props.userId)\n  //this.props.readCloths(1)\n  }*\n\n  renderCloths() {\n  return (\n  _.map(this.props.events, clothData => (\n  <GridListTile key={clothData.c_link} style={{width: '20%'}}>\n  <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\n  </GridListTile>\n  ))\n  )\n  }*/\n\n  renderCloths() {\n    /*const clothsState = JSON.parse(localStorage.getItem('clothsData'))\n\n    //_.mapKeys(clothsState)\n    clothsState.map((clothData) => {\n      return (\n        <GridListTile key={clothData.c_link} style={{width: '20%'}}>\n          <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\n        </GridListTile>\n      )\n    })*/\n  }\n\n  render() {\n    //if(!Number.isInteger(this.props.events))  return <Loading />\n    if(!Number.isInteger(1000))  return <Loading />\n    //if (this.props.events == null) return <Loading />\n    //if (this.props.userId === undefined) return <Loading />\n\n    return (\n      <div className=\"root\">\n        <GridList key={this.props.events.c_u_id} cellHeight={200} className=\"gridList\">\n\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n            <ListSubheader component=\"div\" className=\"listSubheader\" style={{fontSize: '2rem'}}>所有服一覧</ListSubheader>\n          </GridListTile>\n\n          {/* 所有服一覧表示 */}\n          {this.renderCloths()}\n          {/*\n            {this.state.userDatas.map((tile) => {\n            return (\n            <GridListTile key={tile.c_link} style={{width: '20%'}}>\n            <img src={tile.c_link} alt={`服画像id : ${tile.c_u_id}`} />\n            </GridListTile>\n            )\n            })}\n            */}\n\n            {this.state.datas.map((clothData) => {\n              return (\n                <div className=\"readContainer\">\n                  <img src={clothData.c_link} key={clothData.id} alt=\"haha\" />\n              </div>\n              )\n            })}\n\n\n            {/*this.setUser(this.props.userId)*/}\n\n          </GridList>\n        </div>\n      )\n    }\n  }\n\n\n  const mapStateToProps = state => ({ events: state.events })\n  const mapDispatchToProps = ({ readCloths });\n\n  export default connect(mapStateToProps, mapDispatchToProps)(\n    ClothsTile\n  );\n\n\n  //export default ClothsTile;\n"]},"metadata":{},"sourceType":"module"}