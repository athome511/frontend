{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/ClothsTile.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { readCloths } from '../actions';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Loading from '../public/Loading'; //css\n\nimport '../css/clothsTile.css'; // ユーザの所有服一覧\n\nclass ClothsTile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      datas: [],\n      userDatas: []\n    };\n  }\n  /*componentDidMount(){\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n     //request.get(`/cloths/${this.props.userId}`)\n    request.get(`/cloths/${this.props.userId}`)\n    .then(res => {\n      this.setState({\n        datas: res.data\n      });\n    })\n  }\n   componentWillMount(){\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n     //request.get(`/cloths/${this.props.userId}`)\n    request.get(`/cloths/${this.props.userId}`)\n    .then(res => {\n      this.setState({\n        datas: res.data\n      });\n    })\n  }\n  */\n\n\n  async setUser(userId) {\n    console.log(userId);\n    const request = await axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    });\n    await request.get(\"/cloths/\".concat(userId)).then(res => {\n      this.setState({\n        userDatas: res.data\n      });\n    });\n    console.log(this.state);\n  }\n  /*componentDidMout() {\n    console.log(\"componentDid\")\n    this.props.readCloths(this.props.userId)\n  }\n    renderCloths() {\n    return (\n      _.map(this.props.events, clothData => (\n        <GridListTile key={clothData.c_link} style={{width: '20%'}}>\n          <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\n        </GridListTile>\n      ))\n    )\n  }\n  */\n\n\n  render() {\n    if (!Number.isInteger(this.props.userId)) return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 200,\n      className: \"gridList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: \"Subheader\",\n      cols: 2,\n      style: {\n        height: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(ListSubheader, {\n      component: \"div\",\n      className: \"listSubheader\",\n      style: {\n        fontSize: '2rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\u6240\\u6709\\u670D\\u4E00\\u89A7\")), this.setUser(this.props.userId)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  events: state.events\n});\n\nconst mapDispatchToProps = {\n  readCloths\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ClothsTile); //export default ClothsTile;","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/ClothsTile.js"],"names":["React","axios","_","connect","readCloths","GridList","GridListTile","ListSubheader","Loading","ClothsTile","Component","constructor","state","datas","userDatas","setUser","userId","console","log","request","create","baseURL","get","then","res","setState","data","render","Number","isInteger","props","height","fontSize","mapStateToProps","events","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAGA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,OAAO,uBAAP,C,CAGA;;AACA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,QAAMC,OAAN,CAAcC,MAAd,EAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMG,OAAO,GAAG,MAAMlB,KAAK,CAACmB,MAAN,CAAa;AACjCC,MAAAA,OAAO,EAAE;AADwB,KAAb,CAAtB;AAGA,UAAMF,OAAO,CAACG,GAAR,mBAAuBN,MAAvB,GACLO,IADK,CACAC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc;AACZX,QAAAA,SAAS,EAAGU,GAAG,CAACE;AADJ,OAAd;AAGD,KALK,CAAN;AAMAT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACD;AAGD;;;;;;;;;;;;;;;;AAmBAe,EAAAA,MAAM,GAAG;AACP,QAAG,CAACC,MAAM,CAACC,SAAP,CAAiB,KAAKC,KAAL,CAAWd,MAA5B,CAAJ,EAA0C,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAE1C,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,GAAtB;AAA2B,MAAA,SAAS,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAC,WAAlB;AAA8B,MAAA,IAAI,EAAE,CAApC;AAAuC,MAAA,KAAK,EAAE;AAAEe,QAAAA,MAAM,EAAE;AAAV,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,KAAzB;AAA+B,MAAA,SAAS,EAAC,eAAzC;AAAyD,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CAFF,EAoBG,KAAKjB,OAAL,CAAa,KAAKe,KAAL,CAAWd,MAAxB,CApBH,CADA,CADF;AA2BD;;AArGsC;;AAyGzC,MAAMiB,eAAe,GAAGrB,KAAK,KAAK;AAAEsB,EAAAA,MAAM,EAAEtB,KAAK,CAACsB;AAAhB,CAAL,CAA7B;;AACA,MAAMC,kBAAkB,GAAI;AAAE/B,EAAAA;AAAF,CAA5B;AAEA,eAAeD,OAAO,CAAC8B,eAAD,EAAkBE,kBAAlB,CAAP,CACX1B,UADW,CAAf,C,CAKA","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\n\nimport { readCloths } from '../actions';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n\nimport Loading from '../public/Loading';\n//css\nimport '../css/clothsTile.css';\n\n\n// ユーザの所有服一覧\nclass ClothsTile extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      datas: [],\n      userDatas: []\n    };\n  }\n  /*componentDidMount(){\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n\n    //request.get(`/cloths/${this.props.userId}`)\n    request.get(`/cloths/${this.props.userId}`)\n    .then(res => {\n      this.setState({\n        datas: res.data\n      });\n    })\n  }\n\n  componentWillMount(){\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n\n    //request.get(`/cloths/${this.props.userId}`)\n    request.get(`/cloths/${this.props.userId}`)\n    .then(res => {\n      this.setState({\n        datas: res.data\n      });\n    })\n  }\n*/\n\n  async setUser(userId) {\n    console.log(userId)\n    const request = await axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n    await request.get(`/cloths/${userId}`)\n    .then(res => {\n      this.setState({\n        userDatas : res.data\n      })\n    })\n    console.log(this.state)\n  }\n\n\n  /*componentDidMout() {\n    console.log(\"componentDid\")\n    this.props.readCloths(this.props.userId)\n  }\n\n\n  renderCloths() {\n    return (\n      _.map(this.props.events, clothData => (\n        <GridListTile key={clothData.c_link} style={{width: '20%'}}>\n          <img src={clothData.c_link} alt={`服画像id : ${clothData.c_u_id}`} />\n        </GridListTile>\n      ))\n    )\n  }\n*/\n\n\n\n  render() {\n    if(!Number.isInteger(this.props.userId))  return <Loading />\n\n    return (\n      <div className=\"root\">\n      <GridList cellHeight={200} className=\"gridList\">\n\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\" className=\"listSubheader\" style={{fontSize: '2rem'}}>所有服一覧</ListSubheader>\n        </GridListTile>\n\n        {/* 所有服一覧表示\n        {this.renderCloths()}\n        {console.log(\"できてる？\")}\n*/}\n        {/*\n        {this.state.userDatas.map((tile) => {\n          return (\n            <GridListTile key={tile.c_link} style={{width: '20%'}}>\n              <img src={tile.c_link} alt={`服画像id : ${tile.c_u_id}`} />\n            </GridListTile>\n          )\n        })}\n        */}\n\n        {this.setUser(this.props.userId)}\n\n      </GridList>\n    </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({ events: state.events })\nconst mapDispatchToProps = ({ readCloths });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    ClothsTile\n);\n\n\n//export default ClothsTile;\n"]},"metadata":{},"sourceType":"module"}