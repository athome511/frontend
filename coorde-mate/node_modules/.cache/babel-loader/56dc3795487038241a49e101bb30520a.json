{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/RequestCard.js\";\nimport React from 'react';\nimport axios from 'axios'; //import { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase'; //css\n\nimport '../css/requestCard.css';\n\nclass RequestCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userDatas: []\n    };\n  }\n\n  componentWillMount() {\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    });\n\n    if (this.props.userId !== undefined) {\n      request.get(\"/users/\".concat(this.props.userId)).then(res => {\n        this.setState({\n          userDatas: res.data\n        });\n      });\n    }\n  }\n\n  render() {\n    //const style = { border: this.props.borderStyle }\n\n    /*\n    const useStyles = makeStyles(theme => ({\n      root: {\n        flexGrow: 1,\n      },\n      paper: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: 500,\n      },\n      image: {\n        width: 128,\n        height: 128,\n      },\n      img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n      },\n    }));\n    */\n    const root = {\n      flexGrow: 1\n    };\n    const paper = {\n      padding: 10,\n      margin: 'auto',\n      maxWidth: 1000\n    };\n    const image = {\n      width: 128,\n      height: 128\n    };\n    const img = {\n      margin: 'auto',\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%'\n    };\n    return React.createElement(\"div\", {\n      style: root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      style: paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ButtonBase, {\n      style: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: img,\n      alt: \"user_icon\",\n      src: this.state.userDatas.u_icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: true,\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"column\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.props.title), React.createElement(Typography, {\n      variant: \"body2\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.memo), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.limit))), (() => {\n      if (this.props.bcSelected === false) {\n        return React.createElement(Grid, {\n          item: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"subtitle1\",\n          className: \"accent bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"BC\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"));\n      }\n    })()))));\n  }\n\n}\n\nexport default RequestCard;","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/RequestCard.js"],"names":["React","axios","Grid","Paper","Typography","ButtonBase","RequestCard","Component","constructor","props","state","userDatas","componentWillMount","request","create","baseURL","userId","undefined","get","then","res","setState","data","render","root","flexGrow","paper","padding","margin","maxWidth","image","width","height","img","display","maxHeight","u_icon","title","memo","limit","bcSelected"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n//import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\n//css\nimport '../css/requestCard.css';\n\nclass RequestCard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      userDatas:[]\n    }\n  }\n\n\n\n  componentWillMount(){\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n\n    if(this.props.userId !== undefined) {\n      request.get(`/users/${this.props.userId}`)\n      .then(res => {\n        this.setState({\n          userDatas: res.data\n        });\n      })\n    }\n  }\n\n\n  render() {\n    //const style = { border: this.props.borderStyle }\n    /*\n    const useStyles = makeStyles(theme => ({\n      root: {\n        flexGrow: 1,\n      },\n      paper: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: 500,\n      },\n      image: {\n        width: 128,\n        height: 128,\n      },\n      img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n      },\n    }));\n*/\n    const root = { flexGrow: 1 }\n    const paper = {\n      padding: 10,\n      margin: 'auto',\n      maxWidth: 1000\n    }\n    const image = {\n      width: 128,\n      height: 128\n    }\n    const img = {\n      margin: 'auto',\n      display: 'block',\n      maxWidth: '100%',\n      maxHeight: '100%'\n    }\n\n    return (\n      <div style={root}>\n      <Paper style={paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase style={image}>\n              <img style={img} alt=\"user_icon\" src={this.state.userDatas.u_icon} />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  {this.props.title}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  {this.props.memo}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {this.props.limit}\n                </Typography>\n              </Grid>\n            </Grid>\n            {\n              (() => {\n                if (this.props.bcSelected === false) {\n                  return (\n                    <Grid item>\n                      <Typography variant=\"subtitle1\" className=\"accent bold\">\n                      BCを選択してください\n                    </Typography>\n                    </Grid>\n                  )\n                }\n              })()\n            }\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n    );\n  }\n}\n\nexport default RequestCard;\n"]},"metadata":{},"sourceType":"module"}