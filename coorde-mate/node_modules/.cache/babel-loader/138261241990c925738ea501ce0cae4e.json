{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField'; //ログイン画面\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      u_mail: '',\n      u_password: ''\n    }; // stateのkey名とフォームのname属性を一致させる\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    let name = e.target.name; // フォームのname属性を取得\n\n    this.setState({\n      [name]: e.target.value\n    }); // name属性 = stateのkey名なのでstateに保存\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          submitting = _this$props.submitting;\n    const style = {\n      margin: 12\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"\\u30ED\\u30B0\\u30A4\\u30F3\\u753B\\u9762\"), React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n      name: \"u_mail\",\n      type: \"text\",\n      value: this.state.u_name,\n      onChange: this.handleChange,\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n      name: \"u_password\",\n      type: \"password\",\n      value: this.state.u_password,\n      onChange: this.handleChange,\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(RaisedButton, {\n      label: \"\\u30ED\\u30B0\\u30A4\\u30F3\",\n      type: \"submit\",\n      style: style,\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(RaisedButton, {\n      label: \"\\u65B0\\u898F\\u767B\\u9332\",\n      style: style,\n      containerElement: React.createElement(Link, {\n        to: \"/signIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.u_name) errors.u_name = \"Entar a 1title, Please.\";\n  if (!values.u_mail) errors.u_mail = \"Entar a 2title, Please.\";\n  if (!values.u_password) errors.u_password = \"Entar a 3title, Please.\";\n  return errors;\n}; //const mapDispatchToProps = ({ signInEvent })\n\n\nexport default connect(null, null)(reduxForm({\n  validate,\n  form: 'loginForm'\n})(Login));","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/Login.js"],"names":["React","connect","Field","reduxForm","Link","RaisedButton","TextField","Login","Component","constructor","props","state","u_mail","u_password","handleChange","bind","e","name","target","setState","value","render","handleSubmit","pristine","submitting","style","margin","onSubmit","u_name","renderField","validate","values","errors","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\n\n//ログイン画面\nclass Login extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      u_mail: '',\n      u_password: ''\n    } // stateのkey名とフォームのname属性を一致させる\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange (e) {\n    let name = e.target.name; // フォームのname属性を取得\n    this.setState({ [name]: e.target.value }) // name属性 = stateのkey名なのでstateに保存\n  }\n\n\n\n\n\n  render() {\n    const { handleSubmit, pristine, submitting } = this.props\n    const style = { margin: 12 }\n\n    return (\n      <div>\n        <h1>ログイン画面</h1>\n        <form onSubmit={handleSubmit(this.onSubmit)}>\n\n          <div>\n            <TextField\n              label=\"メールアドレス\"\n              name=\"u_mail\"\n              type=\"text\"　\n              value={this.state.u_name} onChange={this.handleChange} component={this.renderField} />\n          </div>\n\n          <div>\n            <TextField\n              label=\"パスワード\"\n              name=\"u_password\"\n              type=\"password\"\n              value={this.state.u_password}\n              onChange={this.handleChange}\n              component={this.renderField} />\n          </div>\n\n\n          <RaisedButton label=\"ログイン\" type=\"submit\" style={style} disabled={pristine || submitting} />\n\n          <RaisedButton label=\"新規登録\" style={style} containerElement={<Link to=\"/signIn\"  />} />\n\n        </form>\n      </div>\n    )\n  }\n}\n\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.u_name) errors.u_name = \"Entar a 1title, Please.\"\n  if (!values.u_mail) errors.u_mail = \"Entar a 2title, Please.\"\n  if (!values.u_password) errors.u_password = \"Entar a 3title, Please.\"\n\n  return errors\n}\n\n//const mapDispatchToProps = ({ signInEvent })\n\nexport default connect(null, null)(\n  reduxForm({ validate, form: 'loginForm' })(Login)\n)\n"]},"metadata":{},"sourceType":"module"}