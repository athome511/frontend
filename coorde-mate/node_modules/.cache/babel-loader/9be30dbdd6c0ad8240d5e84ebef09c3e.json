{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/SubmitRequest.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField'; //import ButtonComponent from '../public/ButtonComponent';\n\nimport { postEvent } from '../actions'; //css\n\nimport '../css/submitRequest.css'; //依頼投稿ページ\n\nclass SubmitRequest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  renderField(field) {\n    const input = field.input,\n          label = field.label,\n          type = field.type,\n          _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n    return React.createElement(TextField, Object.assign({\n      hintText: label,\n      floatingLabelText: label,\n      type: type,\n      errorText: touched && error\n    }, input, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n  async onSubmit(values) {\n    await this.props.postEvent(values);\n    this.props.history.push('/completed');\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          submitting = _this$props.submitting;\n    const style = {\n      margin: 12\n    };\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, console.log(this.props), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"\\u4F9D\\u983C\\u30BF\\u30A4\\u30C8\\u30EB\",\n      name: \"r_title\",\n      type: \"String\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"\\u4F9D\\u983C\\u30E1\\u30E2\",\n      name: \"r_memo\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"\\u4F9D\\u983C\\u671F\\u9650\",\n      name: \"r_limit\",\n      type: \"datetime\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(RaisedButton, {\n      label: \"Submit\",\n      type: \"submit\",\n      style: style,\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(RaisedButton, {\n      label: \"Cancel\",\n      style: style,\n      containerElement: React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.r_title) errors.r_title = \"Entar a 1title, Please.\";\n  if (!values.r_memo) errors.r_memo = \"Entar a 2title, Please.\";\n  if (!values.r_limit) errors.r_limit = \"Entar a 3title, Please.\";\n  return errors;\n};\n\nconst mapDispatchToProps = {\n  postEvent\n};\nexport default connect(null, mapDispatchToProps)(reduxForm({\n  validate,\n  form: 'requestNewForm'\n})(SubmitRequest));","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/SubmitRequest.js"],"names":["React","connect","Field","reduxForm","Link","RaisedButton","TextField","postEvent","SubmitRequest","Component","constructor","props","onSubmit","bind","renderField","field","input","label","type","meta","touched","error","values","history","push","render","handleSubmit","pristine","submitting","style","margin","console","log","validate","errors","r_title","r_memo","r_limit","mapDispatchToProps","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\n\n\n//import ButtonComponent from '../public/ButtonComponent';\nimport { postEvent } from '../actions';\n\n//css\nimport '../css/submitRequest.css';\n\n//依頼投稿ページ\nclass SubmitRequest extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  renderField(field) {\n    const { input, label, type, meta: { touched, error } } = field\n\n    return(\n      <TextField\n        hintText={label}\n        floatingLabelText={label}\n        type={type}\n        errorText={touched && error}\n        {...input}\n        fullWidth={true}\n      />\n    )\n  }\n\n\n  async onSubmit(values) {\n    await this.props.postEvent(values)\n    this.props.history.push('/completed')\n  }\n\n  render() {\n    const { handleSubmit, pristine, submitting } = this.props\n    const style = { margin: 12 }\n\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        {console.log(this.props)}\n\n        <div><Field label=\"依頼タイトル\" name=\"r_title\" type=\"String\" component={this.renderField} /></div>\n\n        <div><Field label=\"依頼メモ\" name=\"r_memo\" type=\"text\" component={this.renderField} /></div>\n\n        <div><Field label=\"依頼期限\" name=\"r_limit\" type=\"datetime\" component={this.renderField} /></div>\n\n\n        <RaisedButton label=\"Submit\" type=\"submit\" style={style} disabled={pristine || submitting} />\n\n        <RaisedButton label=\"Cancel\" style={style} containerElement={<Link to=\"/\"  />} />\n\n      </form>\n\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {}\n\n  if (!values.r_title) errors.r_title = \"Entar a 1title, Please.\"\n  if (!values.r_memo) errors.r_memo = \"Entar a 2title, Please.\"\n  if (!values.r_limit) errors.r_limit = \"Entar a 3title, Please.\"\n\n  return errors\n}\n\nconst mapDispatchToProps = ({ postEvent })\n\nexport default connect(null, mapDispatchToProps)(\n  reduxForm({ validate, form: 'requestNewForm' })(SubmitRequest)\n)\n"]},"metadata":{},"sourceType":"module"}