{"ast":null,"code":"var _jsxFileName = \"/Users/konchan/works/frontend/coorde-mate/src/components/ProposalCard.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash'; //import { connect  } from 'react-redux';\n//import { readProposals } from '../actions';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader'; //import Loading from '../public/Loading';\n\nclass ProposalCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      proposalDatas: [],\n      imageData: []\n    };\n  }\n\n  componentWillMount() {\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    });\n    request.get(\"/proposals/\".concat(this.props.requestId)).then(res => {\n      this.setState({\n        proposalDatas: res.data\n      });\n    });\n  }\n  /*\n  componentDidMount() {\n  this.props.readProposals(this.requestIdState)\n  }*/\n\n  /*\n  renderProposals(requestId) {\n  this.props.readProposals(requestId)\n   return (\n  _.map(this.props.events, proposalData => (\n  <div>\n  <p>提案メモ</p>\n  <p>{proposalData.p_memo}</p>\n  <p>提案服一覧</p>\n  <div>{this.renderSelectSloths(proposalData.p_pc_text)}</div>\n  <p>{proposalData.p_pc_text}</p>\n   ---------------------------------\n  </div>\n  ))\n  )\n  }*/\n\n\n  renderSelectSloths(selectCloths, cloth) {\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001/'\n    });\n    const ary = selectCloths.split('_');\n    ary.map(function (v) {\n      return parseInt(v);\n    });\n\n    for (let clothId = 0; clothId < ary.length; clothId++) {\n      request.get(\"/closets/\".concat(clothId)).then(res => {\n        this.setState({\n          imageData: res.data.c_link\n        });\n        console.log(this.state.imageData);\n      });\n      return React.createElement(GridListTile, {\n        key: clothId,\n        style: {\n          width: '20%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.imageData,\n        alt: \"proposal image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n    /*\n        ary.map((clothData) => {\n          request.get(`/closets/${clothData.id}`)\n          .then(res => {\n            this.setState({\n              imageData: res.data.c_link\n            });\n          })\n          return (\n            <GridListTile key={clothData} style={{width: '20%'}}>\n              <img src=\"http://18.178.35.28:3001/closets/${clothData}\" alt=\"proposal image\"/>\n            </GridListTile>\n          )\n        })\n    */\n\n  }\n  /*\n  componentWillMount() {\n  const requestIdState = localStorage.getItem('requestId')\n  }\n  */\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.proposalDatas.map(cloth => {\n      if (cloth.id) {\n        return React.createElement(\"div\", {\n          className: \"root\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(GridList, {\n          cellHeight: 200,\n          className: \"gridList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(GridListTile, {\n          key: \"Subheader\",\n          cols: 2,\n          style: {\n            height: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(ListSubheader, {\n          component: \"div\",\n          className: \"listSubheader\",\n          style: {\n            fontSize: '2rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"\\u6240\\u6709\\u670D\\u4E00\\u89A7\")), React.createElement(GridListTile, {\n          key: cloth.id,\n          style: {\n            width: '20%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, this.renderSelectSloths(cloth.p_pc_text, cloth)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"memo: \", cloth.p_memo)));\n      }\n    }));\n  }\n\n}\n/*\nconst mapStateToProps = state => ({ events: state.events })\nconst mapDispatchToProps = ({ readProposals })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalCard);\n*/\n\n\nexport default ProposalCard;","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/components/ProposalCard.js"],"names":["React","axios","_","GridList","GridListTile","ListSubheader","ProposalCard","Component","constructor","props","state","proposalDatas","imageData","componentWillMount","request","create","baseURL","get","requestId","then","res","setState","data","renderSelectSloths","selectCloths","cloth","ary","split","map","v","parseInt","clothId","length","c_link","console","log","width","render","id","height","fontSize","p_pc_text","p_memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\n//import { connect  } from 'react-redux';\n//import { readProposals } from '../actions';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n//import Loading from '../public/Loading';\n\nclass ProposalCard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      proposalDatas:[],\n      imageData:[]\n    }\n  }\n\n\n  componentWillMount(){\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001'\n    })\n\n    request.get(`/proposals/${this.props.requestId}`)\n    .then(res => {\n      this.setState({ proposalDatas: res.data })\n    })\n\n  }\n\n\n\n  /*\n  componentDidMount() {\n  this.props.readProposals(this.requestIdState)\n  }*/\n  /*\n  renderProposals(requestId) {\n  this.props.readProposals(requestId)\n\n  return (\n  _.map(this.props.events, proposalData => (\n  <div>\n  <p>提案メモ</p>\n  <p>{proposalData.p_memo}</p>\n  <p>提案服一覧</p>\n  <div>{this.renderSelectSloths(proposalData.p_pc_text)}</div>\n  <p>{proposalData.p_pc_text}</p>\n\n  ---------------------------------\n  </div>\n  ))\n  )\n  }*/\n\n  renderSelectSloths(selectCloths, cloth) {\n    const request = axios.create({\n      baseURL: 'http://18.178.35.28:3001/'\n    })\n\n\n    const ary = selectCloths.split('_')\n    ary.map(function(v) {\n      return parseInt(v)\n    })\n\n    for(let clothId = 0; clothId < ary.length; clothId++) {\n      request.get(`/closets/${clothId}`)\n      .then(res => {\n        this.setState({\n          imageData: res.data.c_link\n        });\n        console.log(this.state.imageData)\n      })\n      return (\n        <GridListTile key={clothId} style={{width: '20%'}}>\n          <img src={this.state.imageData} alt=\"proposal image\"/>\n        </GridListTile>\n      )\n    }\n/*\n    ary.map((clothData) => {\n      request.get(`/closets/${clothData.id}`)\n      .then(res => {\n        this.setState({\n          imageData: res.data.c_link\n        });\n      })\n      return (\n        <GridListTile key={clothData} style={{width: '20%'}}>\n          <img src=\"http://18.178.35.28:3001/closets/${clothData}\" alt=\"proposal image\"/>\n        </GridListTile>\n      )\n    })\n*/\n  }\n  /*\n  componentWillMount() {\n  const requestIdState = localStorage.getItem('requestId')\n  }\n  */\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.proposalDatas.map((cloth) => {\n          if(cloth.id) {\n            return (\n              <div className=\"root\">\n                <GridList cellHeight={200} className=\"gridList\">\n                  <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                    <ListSubheader component=\"div\" className=\"listSubheader\" style={{fontSize: '2rem'}}>所有服一覧</ListSubheader>\n                  </GridListTile>\n\n                  <GridListTile key={cloth.id} style={{width: '20%'}}>\n                    {this.renderSelectSloths(cloth.p_pc_text, cloth)}\n                  </GridListTile>\n\n                  <p>memo: {cloth.p_memo}</p>\n\n                </GridList>\n              </div>\n            )\n          }\n        })}\n\n      </React.Fragment>\n    );\n  }\n}\n\n/*\nconst mapStateToProps = state => ({ events: state.events })\nconst mapDispatchToProps = ({ readProposals })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProposalCard);\n*/\nexport default ProposalCard;\n"]},"metadata":{},"sourceType":"module"}