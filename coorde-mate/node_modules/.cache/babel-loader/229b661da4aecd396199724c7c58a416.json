{"ast":null,"code":"import axios from 'axios'; //オリジナル\n\nexport const SIGN_IN = 'SIGN_IN';\nexport const READ_REQUESTS = 'READ_REQUESTS';\nexport const READ_USER = 'READ_USER';\nexport const READ_REQUEST_DETAILS = 'READ_REQUEST_DETAILS';\nexport const READ_CLOTHS = 'READ_CLOTHS'; //以下二つは他でも使うため宣言\n\nexport const READ_EVENTS = 'READ_EVENTS';\nexport const READ_EVENT = 'READ_EVENT';\nexport const CREATE_EVENT = 'CREATE_EVENT';\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\nexport const DELETE_EVENT = 'DELETE_EVENT';\nconst ROOT_URL = 'http://18.178.35.28:3001/'; //新規登録\n\nexport const signInEvent = values => async dispatch => {\n  const response = await axios.post(\"\".concat(ROOT_URL, \"/users\"), values);\n  dispatch({\n    type: SIGN_IN,\n    response\n  });\n}; //外部APIにリクエストを投げる\n\nexport const readRequests = () => async dispatch => {\n  const response = await axios.get(\"\".concat(ROOT_URL, \"/requests\"));\n  dispatch({\n    type: READ_REQUESTS,\n    response\n  });\n}; //ユーザデータ取得\n\nexport const readUser = userId => async dispatch => {\n  const response = await axios.get(\"\".concat(ROOT_URL, \"/users/\").concat(userId));\n  dispatch({\n    type: READ_USER,\n    response\n  });\n}; //依頼詳細取得\n\nexport const readRequestDetails = requestId => async dispatch => {\n  const response = await axios.get(\"\".concat(ROOT_URL, \"/requests/\").concat(requestId));\n  dispatch({\n    type: READ_REQUEST_DETAILS,\n    response\n  });\n};\nexport const readEvents = () => async dispatch => {\n  const response = await axios.get(\"\".concat(ROOT_URL, \"/events\"));\n  dispatch({\n    type: READ_EVENTS,\n    response\n  });\n}; //所有服一覧\n\nexport const readCloths = userId => async dispatch => {\n  const response = await axios.get(\"\".concat(ROOT_URL, \"/cloths/\").concat(userId));\n  dispatch({\n    type: READ_CLOTHS,\n    response\n  });\n}; //投稿ページ\n//依頼情報登録？\n\nexport const postEvent = values => async dispatch => {\n  const response = await axios.post(\"\".concat(ROOT_URL, \"/requests\"), values);\n  dispatch({\n    type: CREATE_EVENT,\n    response\n  });\n};\nexport const putEvent = values => async dispatch => {\n  const response = await axios.put(\"\".concat(ROOT_URL, \"/events/\").concat(values.id), values);\n  dispatch({\n    type: UPDATE_EVENT,\n    response\n  });\n};\nexport const getEvent = id => async dispatch => {\n  const response = await axios.get(\"\".concat(ROOT_URL, \"/events/\").concat(id));\n  dispatch({\n    type: READ_EVENT,\n    response\n  });\n};\nexport const deleteEvent = id => async dispatch => {\n  await axios.delete(\"\".concat(ROOT_URL, \"/events/\").concat(id));\n  dispatch({\n    type: DELETE_EVENT,\n    id\n  });\n};","map":{"version":3,"sources":["/Users/konchan/works/frontend/coorde-mate/src/actions/index.js"],"names":["axios","SIGN_IN","READ_REQUESTS","READ_USER","READ_REQUEST_DETAILS","READ_CLOTHS","READ_EVENTS","READ_EVENT","CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","ROOT_URL","signInEvent","values","dispatch","response","post","type","readRequests","get","readUser","userId","readRequestDetails","requestId","readEvents","readCloths","postEvent","putEvent","put","id","getEvent","deleteEvent","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n\n//オリジナル\nexport const SIGN_IN = 'SIGN_IN';\nexport const READ_REQUESTS = 'READ_REQUESTS';\nexport const READ_USER = 'READ_USER';\nexport const READ_REQUEST_DETAILS = 'READ_REQUEST_DETAILS';\nexport const READ_CLOTHS = 'READ_CLOTHS';\n\n\n//以下二つは他でも使うため宣言\nexport const READ_EVENTS = 'READ_EVENTS';\nexport const READ_EVENT = 'READ_EVENT';\nexport const CREATE_EVENT = 'CREATE_EVENT';\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\nexport const DELETE_EVENT = 'DELETE_EVENT';\n\n\n\nconst ROOT_URL = 'http://18.178.35.28:3001/';\n\n//新規登録\nexport const signInEvent = values => async dispatch => {\n  const response = await axios.post(`${ROOT_URL}/users`, values)\n  dispatch({ type: SIGN_IN, response })\n}\n\n//外部APIにリクエストを投げる\nexport const readRequests = () => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/requests`)\n  dispatch({ type: READ_REQUESTS, response })\n}\n\n//ユーザデータ取得\nexport const readUser = (userId) => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/users/${userId}`)\n  dispatch({ type: READ_USER, response})\n}\n\n//依頼詳細取得\nexport const readRequestDetails = (requestId) => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/requests/${requestId}`)\n  dispatch({ type: READ_REQUEST_DETAILS, response })\n}\n\n\n\n\n\n\n\nexport const readEvents = () => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/events`)\n  dispatch({ type: READ_EVENTS, response })\n}\n\n//所有服一覧\nexport const readCloths = userId => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/cloths/${userId}`)\n  dispatch({ type: READ_CLOTHS, response })\n}\n\n\n//投稿ページ\n//依頼情報登録？\nexport const postEvent = values => async dispatch => {\n  const response = await axios.post(`${ROOT_URL}/requests`, values)\n  dispatch({ type: CREATE_EVENT, response })\n}\n\n\n\n\n\n\nexport const putEvent = values => async dispatch => {\n  const response = await axios.put(`${ROOT_URL}/events/${values.id}`, values)\n  dispatch({ type: UPDATE_EVENT, response})\n}\n\nexport const getEvent = id => async dispatch => {\n  const response = await axios.get(`${ROOT_URL}/events/${id}`)\n  dispatch({ type: READ_EVENT, response})\n}\n\nexport const deleteEvent = id => async dispatch => {\n  await axios.delete(`${ROOT_URL}/events/${id}`)\n  dispatch({ type: DELETE_EVENT, id })\n}\n"]},"metadata":{},"sourceType":"module"}